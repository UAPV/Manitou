<?php



/**
 * Skeleton subclass for representing a row from the 'host' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.6.1-dev on:
 *
 * Mon May 23 21:11:36 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class Host extends BaseHost {

  protected $needDnsUpdate = null;

  public function __toString ()
  {
    return $this->getHostname ();
  }

  public function getHostname ()
  {
    return $this->getProfile().'-'.$this->getRoom ().'-'.$this->getNumber ();
  }

  public function getDomainName ()
  {
    return $this->getSubnet()->getDomainName();
  }

  public function getRevDomainName ()
  {
    return $this->getSubnet()->getRevDomainName();
  }

  public function getFqdn ()
  {
    return $this->getHostname().'.'.$this->getDomainName();
  }

  /**
   * Code to be run before persisting the object
   *
   * On détermine si le DNS devra être mis à jour après l'enregistrement en base
   *
   * @param PropelPDO $con
   */
  public function preSave(PropelPDO $con = null)
  {
    // Une fois dans postSave il est impossible de savoir ce qui a été modifié,
    // on enregistre donc l'info dans l'objet
    $this->needDnsUpdate = ($this->isColumnModified (HostPeer::PROFILE_ID) ||
                            $this->isColumnModified (HostPeer::ROOM_ID)    ||
                            $this->isColumnModified (HostPeer::SUBNET_ID)  ||
                            $this->isColumnModified (HostPeer::IP_ADDRESS  ));

    return parent::preSave ($con);
  }

  /**
   * Code to be after before deleting the object in database
   * @param PropelPDO $con
   * @return boolean
   */
  public function postDelete(PropelPDO $con = null)
  {
    parent::postDelete ($con);
    CommandPeer::runDnsUpdate ();
    CommandPeer::runDhcpdUpdate ();
  }

  /**
   * Code to be run after persisting the object
   *
   * On exécute alors la commande de mise à jour du DHCP
   *
   * @param PropelPDO $con
   */
  public function postSave(PropelPDO $con = null)
  {
    parent::postSave ($con);
    CommandPeer::runDhcpdUpdate ();

    // Mise à jour du DNS si nécessaire
    if ($this->needDnsUpdate === true)
      CommandPeer::runDnsUpdate ();
  }

} // Host
